<tool id="fastspar" name="FastSpar" version="@TOOL_VERSION@+@VERSION_SUFFIX@" python_template_version="3.5" profile="21.05">
    <description>
         correlation estimation for compositional data
    </description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
		fastspar
			--otu_table $otu_table
			--iterations $iterations
			--exclude_iterations $exclude_iterations
			--threshold $threshold
			--seed $seed
			--correlation $correlation
			--covariance $covariance
			--threads \${GALAXY_SLOTS:-1}
			--yes
    ]]></command>
    <inputs>
		<!-- Todo: What is the correct Otu format in galaxy? -->
		<param argument="--otu_table" type="data" format="tabular" label="Input OTU table"
			   help="The table must have absolute OTU counts in BIOM format without metadata."/>
		<param argument="--iterations" type="integer" value="50" label="Number of iterations"
			   help="Rounds of SparCC correlation estimation."/>
		<param argument="--exclude_iterations" type="integer" value="10" label="Number of exclusion iterations"
			   help="The number of times highly correlated OTU pairs are excluded."/>
		<param argument="--threshold" type="float" value="0.1" label="Exclusion threshold"
			   help="Correlation strength above which to exclude OTU pairs."/>
		<param argument="--seed" type="integer" value="1" label="Random number seed"/>
	</inputs>
    <outputs>
		<data name="correlation" format="tabular" label="${tool.name} on ${on_string}: median_correlation.tsv"/>
		<data name="covariance" format="tabular" label="${tool.name} on ${on_string}: median_covariance.tsv"/>
    </outputs>
    <tests>
		<test expect_num_outputs="2">
            <param name="otu_table" ftype="tabular" value="fake_data.tsv"/>
            <output name="correlation" file="fake_data_cor.tsv" compare="diff"/>
            <output name="covariance" file="fake_data_cov.tsv" compare="diff"/>
        </test>
    </tests>
    <help><![CDATA[
FastSpar is a C++ implementation of the SparCC algorithm which is up to several thousand times faster
than the original Python2 release and uses much less memory.
    ]]></help>
    <expand macro="citations"/>
</tool>