<tool id="phylophlan_assign_sgbs" name="Assign SGBs and taxonomy" version="@TOOL_VERSION@+galaxy0" python_template_version="3.5" profile="21.05">
    <description>
         to metagenome-assembled genomes.
    </description>
	<macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="biotools"/>
	<expand macro="requirements_assign_sgbs"/>
	<command detect_errors="exit_code"><![CDATA[
		#import re
		
		mkdir -p 'input/' &&
		#for $i in $input
			#set $identifier = re.sub('[^\w\-\._]', '_', str($i.element_identifier))
			ln -s '$i' 'input/${identifier}' &&
		#end for
		
		#if $analysis.type != "matrix"
			mkdir -p 'database/' &&
			#if $reference.source == "history"
				#set $sanitized_name = re.sub('[^\w\-\._]', '', str($reference.database.element_identifier))
				#if $reference.database.element_identifier != $sanitized_name or $sanitized_name[-4:] != ".tar"
					exit 1 &&
				#end if
				ln -s '$reference.database' 'database/${sanitized_name}' &&
				#set $database_name = $sanitized_name[:-4]
			#end if
		#end if
		
		phylophlan_assign_sgbs
			-i input
			-o output
			--database_folder database
			#if $analysis.type == "closest"
				-d $database_name
				#if $analysis.assign_all
					-n all
				#else
					-n $analysis.n
				#end if
			#else if $analysis.type == "taxonomy"
				-d $database_name
				--add_ggb_fgb
			#else if $analysis.type == "matrix"
				--only_input
			#end if
			
			--overwrite
			--nproc \${GALAXY_SLOTS:-4}
			--verbose
    ]]></command>
    <inputs>
		<param name="input" type="data_collection" collection_type="list" format="fasta" label="Input Dataset"/>
		<conditional name="reference">
            <param name="source" type="select" label="Select a reference database">
                <!-- <option value="cached">Locally cached</option> -->
                <option value="history">From history</option>
            </param>
            <!-- <when value="cached">
                <param name="database" type="select" label="Cached database">
                    <options from_data_table="TODO">
                        <validator type="no_options" message="No database is available"/>
                    </options>
                </param>
            </when> -->
            <when value="history">
                <param name="database" type="data" format="tar" label="Reference database"/>
            </when>
        </conditional>
		<conditional name="analysis">
			<param name="type" type="select" label="Output type">
                <option value="closest">Closest n SGBs</option>
                <option value="taxonomy">Single closest SGB, GGB, FGB and reference genome</option>
                <option value="matrix">Pairwise mash distances of the inputs</option>
            </param>
			<when value="closest">
				<param argument="-n" type="integer" value="1" label="How many SGBs to assign to each input genome"/>
				<param name="assign_all" type="boolean" label="Assign all SGBs"/>
			</when>
			<when value="taxonomy"/> <!-- Todo -->
			<when value="matrix"/> <!-- Todo -->
		</conditional>
	</inputs>
    <outputs>
		<data name="output" format="txt">
			
		</data>
    </outputs>
    <tests>
	    
    </tests>
    <help><![CDATA[
The phylophlan_assign_sgbs.py script assigns the SGB and taxonomy to a given set of input genomes. Outputs can be of
three types: (1) for each input genomes returns the list of the closest -n/--how_many SGBs sorted by average Mash
distance; (2) for each input genomes returns the closest SGB, GGB, FGB, and reference genomes; (3) returns a all vs.
all matrix with all the pairwise mash distances

options:
  --database_list       List of all the available databases that can be specified with the -d/--database option
                        (default: False)
  --database_update     Update the databases file (default: False)
  -e INPUT_EXTENSION, --input_extension INPUT_EXTENSION
                        Specify the extension of the input file(s) specified via -i/--input. If not specified will try
                        to infer it from the input files (default: None)

    ]]></help>
    <expand macro="citations"/>
</tool>